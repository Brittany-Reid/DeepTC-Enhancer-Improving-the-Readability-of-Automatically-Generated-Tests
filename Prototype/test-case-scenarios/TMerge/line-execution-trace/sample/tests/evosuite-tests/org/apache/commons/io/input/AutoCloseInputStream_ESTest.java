/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 08 17:05:13 GMT 2020
 */

package org.apache.commons.io.input;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import org.apache.commons.io.input.AutoCloseInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AutoCloseInputStream_ESTest extends AutoCloseInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      AutoCloseInputStream autoCloseInputStream0 = new AutoCloseInputStream(bufferedInputStream0);
      autoCloseInputStream0.afterRead((-1158));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      AutoCloseInputStream autoCloseInputStream0 = new AutoCloseInputStream(byteArrayInputStream0);
      autoCloseInputStream0.finalize();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      AutoCloseInputStream autoCloseInputStream0 = new AutoCloseInputStream(bufferedInputStream0);
      autoCloseInputStream0.close();
      byte[] byteArray0 = new byte[9];
      int int0 = autoCloseInputStream0.read(byteArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      AutoCloseInputStream autoCloseInputStream0 = new AutoCloseInputStream(byteArrayInputStream0);
      autoCloseInputStream0.afterRead((byte)0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AutoCloseInputStream autoCloseInputStream0 = new AutoCloseInputStream((InputStream) null);
      try { 
        autoCloseInputStream0.finalize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.AutoCloseInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AutoCloseInputStream autoCloseInputStream0 = new AutoCloseInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        autoCloseInputStream0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.AutoCloseInputStream", e);
      }
  }
}
