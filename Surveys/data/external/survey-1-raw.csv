,Status,Progress,Duration (in seconds),Finished,RecipientLastName,RecipientFirstName,RecipientEmail,ExternalReference,DistributionChannel,UserLanguage,QID37,Q1.1,Q1.2_1,Q1.2_2,Q1.3,Q1.4,Q1.5,Q2.1_1,Q2.1_2,QID95,Q2.2_1,Q2.2_2,QID96,Q2.3_1,Q2.3_2,QID97,Q2.4,QID106,3.1_1,3.1_2,QID88,3.2_1,3.2_2,QID89,Q3.3,QID107,Q4.1_1,Q4.1_2,Q4.1_3,Q4.1_4,QID90,Q5.1,QID92,Q5.2,QID93,Q5.3,QID98,Q5.4_0_GROUP,Q5.4_1_GROUP,Q5.4_0_1_RANK,Q5.4_0_2_RANK,Q5.4_0_3_RANK,Q5.4_1_1_RANK,Q5.4_1_2_RANK,Q5.4_1_3_RANK,QID94,QID50
2,0,100,156,1,,,,,anonymous,EN,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3,0,100,853,1,,,,,anonymous,EN,,1,2,,2,,,2,2,,3,2,,3,1,,2,,6,3,,2,2,,1,,1,2,2,1,,1,,2,,3,,"2,1,3",,2,1,3,,,,,
4,0,100,368,1,,,,,anonymous,EN,,3,2,8,2,,,3,1,,3,1,,2,1,,2,,2,6,,3,1,,2,,1,1,1,1,,1,,1,,1,,"3,1,2",,2,3,1,,,,,
5,0,100,740,1,,,,,anonymous,EN,,1,1,3,2,,,3,2,,2,3,,3,2,,2,,6,4,,3,1,,2,,4,3,2,1,,2,,2,,1,,"1,2",3,1,2,,,,1,,
6,0,100,762,1,,,,,anonymous,EN,,1,3,3,2,,,1,1,,2,1,,2,2,,2,,2,4,,2,1,,1,,2,2,2,2,"ansiStyle, ansiStyleEncoded, ansiOutput",2,,2,,2,,"3,2,1",,3,2,1,,,,,
7,0,100,1633,1,,,,,anonymous,EN,,2,,,2,,,3,1,,3,1,,2,1,,2,,2,3,,2,1,,3,,1,1,2,,,2,,2,,2,,"2,3",1,,1,2,1,,,,
8,0,100,35228,1,,,,,anonymous,EN,,1,0,7,2,,,1,2,,2,1,,1,2,,1,,3,3,,2,2,,3,The first one tries to be more accurate with a compromise of readability and length,3,4,4,4,All of the variable names can be more precise in describing the intents ,2,,2,,2,,"3,1",2,2,,1,,1,,,
9,0,100,752,1,,,,,anonymous,EN,,1,2,3,2,,,1,1,,2,2,,1,1,,1,,6,6,,2,2,,1,,2,2,2,2,,2,,2,,2,,"1,3,2",,1,3,2,,,,,
10,0,100,794,1,,,,,anonymous,EN,,3,1,3,2,,,1,1,,1,2,,1,2,,1,,2,6,,2,1,,2,The first test case name is too long,1,1,1,1,,1,,2,,2,,"1,3,2",,1,3,2,,,,,
11,0,100,1190,1,,,,,anonymous,EN,,1,0,2,1,1,"IntelliTest primarily as I work primarily in .NET, but a some of the auto test generation frameworks don't follow our preferred coding styles.",1,3,"In B, if you know code you can tell what it does just as quickly as reading the comment, but as I read both, I effectively wasted some time.",1,3,"A.  Concise and easy to read. B.  I can tell from the code what it does, in A. I like that it tells me the default value, etc.",1,1,,1,"When dealing with comments/summaries, if I can tell from the code what it does, ie creates a new object, etc, etc, I don't really need comments to describe it, unless it is a rarely used framework/object.",2,4,"Especially where I work, we are testing so many different cases, having a generic test case name is super annoying.",1,1,"Both are easy to read/understand, but the problem comes in with I want to look at one test case that tests NonEmptyStringAndFalse for example, well now I have to go over tVA1 tVA2 tVA3 tVA4 tVA5 to find the one with the conditions I want.",1,,1,1,1,1,"For data, I'm assuming I already know the data I'm working with so that name might be fine, but for a person just onboarding, if thats customerData for example, minus well call it that.",1,,2,"With test generation, it would be helpful if you have options, maybe like 1. verbose 2. mediumly-verbose? 3. brief, or something similar to that.  I know some teams that have very verbose test cases and some with super short, allows more customizability.",1,,"3,2",1,,2,1,1,,,"The only thing with test case summaries, granted it was a fairly easy example, is that if I can read it in the code and figure it out quickly, then I don't need a comment. For Instance List<int> nums = new ArrayList<>() and then nums.add(2) nums.add(5). I don't need to be told that it appends two numbers to a list of ints, as I can already tell that",
12,0,100,1734,1,,,,,anonymous,EN,,1,0,2,2,,,1,1,,3,1,,1,1,,2,,5,6,,1,1,,2,,1,1,2,2,,1,,2,,2,,,,,,,,,,,
13,0,100,25630,1,,,,,anonymous,EN,,3,1,5,2,,,2,2,,2,1,,2,1,,3,"Listing A is missing some information that I would rather have (like what the function does). You could get this information by reading the code, but having it written as a comments would make the job much easier. I believe Listing B is better but not perfect. IMO, it is too detailed.",2,6,,2,1,,2,"Long names, make the code slightly confusing. If there are many different cases, the first annotation would be worth the trouble, if not, I would go with the second one which is more natural.",1,1,1,1,,1,,2,,3,"Depends on many different factors of the project (e.g. use-case, available time, workload, etc.)","1,2,3",,1,2,3,,,,,"I do not usually use Java, so my answers are mainly my idea of what would be helpful for any general programming language."
14,0,100,339,1,,,,,anonymous,EN,,2,0,3,2,,,2,1,,2,2,,2,1,,2,,2,6,,2,1,,2,,1,1,1,1,,2,,2,,2,,"1,3",2,1,,2,,1,,,
15,0,100,422,1,,,,,anonymous,EN,,3,,5,2,,,1,2,,1,1,,2,2,,1,,2,4,,1,2,,1,,1,1,1,1,,2,,2,,2,,"2,3",1,,1,2,1,,,,
16,0,100,44420,1,,,,,anonymous,EN,,3,0,4,2,,,1,1,,1,1,,2,1,,2,,2,4,,2,2,,1,,1,1,1,1,,1,,1,,1,,"1,2,3",,1,2,3,,,,,
17,0,100,574,1,,,,,anonymous,EN,,4,0,10,1,1,,1,1,,2,1,,2,1,,2,,3,2,,1,1,,2,,2,1,2,2,,1,,1,,2,,"1,3,2",,1,3,2,,,,,
18,0,100,976,1,,,,,anonymous,EN,,1,6,5,2,,,2,1,,1,1,,2,1,,2,,2,3,,2,1,,3,,1,2,1,1,,1,,2,,3,,"3,2,1",,3,2,1,,,,,
19,0,100,1088,1,,,,,anonymous,EN,,1,14,,2,,,1,1,,2,2,"What is it testing? ""Access to invalid index in ArrayIntList""",1,1,,2,I think the overall coverage of the ArrayIntList would be more useful that the coverage of each specific tests.,6,5,False could be expended to its meaning.,1,1,,1,,1,2,1,2,encoded -> encodedStyle result -> ansiData,1,,2,Would be better if integrated with the test cases generator,1,It is more human readable so easier to catch on what's expected and figure out what's the source of the problem in case of a failure.,"2,3,1",,3,1,2,,,,,
20,0,100,1567,1,,,,,anonymous,EN,,1,3,,2,,,3,3,"I might be wrong, but I do not see too much use of test coverage percentage in comments for unittests. As for the second comment - it just repeats whatever I see in the test's code itself. No any new information.",,,Cannot say for sure what information would be useful here in a comment. I don't think this test needs any comments at all.,1,2,,3,Do not see any useful information in both those summaries.,5,3,"What is ""-18""? What kind of magic number is it? If it is some random number - it should be explicitly stated. If that number is not random and have some special meaning - it MUST be explained. Depending on that, it might or might not be reflected in the test's name. Then. The name ""test....WithNonEmptyString"" is just misleading - the string is actually empty. The name ""testVisitAnnotation"" does not say that we serialize result to byte array and does not say what that field ""index"" means.",2,1,,3,"I need more context to propose a better name. But the first thought would be that the name should mention if -18 is some special case or not, and should explain the actual meaning of the assumption that 3 == index. What does that ""3"" means there?",2,2,2,2,"Names are a bit generic, but definitely better than in the first variant.",3,Comments repeating the code are not needed in most cases. All those details as well can be seen in the code itself.,4,,4,,,"3,2,1",,,,3,2,1,,Comments must not be blindly based on the source code. Comments are needed to add additional information.
21,0,100,915,1,,,,,anonymous,EN,,3,2,4,2,,,1,1,,2,1,,2,1,,2,,2,6,,1,1,,1,"For test cases that are written for the same UCP, the names should be descriptive enough to differentiate between two test cases geared towards testing different classes of input. ",1,1,1,1,,1,Enables someone reviewing the code to understand the purpose of the test case even without going into the actual code. ,1,,2,This might change to 'Extremely likely' based on its ability to generate test cases for codes of higher complexity. ,"1,3,2",,1,3,2,,,,"From a black box point of view, I feel the test case summaries are most important followed by Method renaming and variable renaming. ","I am not aware of the state of the art as far unit test generation tools are concerned. But if the variable renaming functionality of the proposed tool is a fully automated one, or done under a very limited supervised setting, then that is very commendable and very useful from an SDE pov. "
22,0,100,1862,1,,,,,anonymous,EN,,3,4,5,2,,,3,1,,3,1,,3,1,,2,,2,5,,1,3,,1,,2,3,2,2,,2,,3,,3,,"2,3",1,,1,2,1,,,,
